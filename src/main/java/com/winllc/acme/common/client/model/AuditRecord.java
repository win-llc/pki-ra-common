/*
 * OpenAPI definition
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.winllc.acme.common.client.model;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
/**
 * AuditRecord
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-12-12T15:21:01.254Z[GMT]")
public class AuditRecord {
  @SerializedName("id")
  private Long id = null;

  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    CERTIFICATE_ISSUED("CERTIFICATE_ISSUED"),
    CERTIFICATE_REVOKED("CERTIFICATE_REVOKED"),
    SERVER_ENTRY_ADDED("SERVER_ENTRY_ADDED"),
    SERVER_ENTRY_UPDATED("SERVER_ENTRY_UPDATED"),
    SERVER_ENTRY_REMOVED("SERVER_ENTRY_REMOVED"),
    ACCOUNT_ADDED("ACCOUNT_ADDED"),
    ACCOUNT_POCS_UPDATED("ACCOUNT_POCS_UPDATED"),
    ACCOUNT_REMOVED("ACCOUNT_REMOVED"),
    DOMAIN_LINK_TO_ACCOUNT_REQUEST_CREATED("DOMAIN_LINK_TO_ACCOUNT_REQUEST_CREATED"),
    DOMAIN_LINK_TO_ACCOUNT_REQUEST_APPROVED("DOMAIN_LINK_TO_ACCOUNT_REQUEST_APPROVED"),
    DOMAIN_LINK_TO_ACCOUNT_REQUEST_REJECTED("DOMAIN_LINK_TO_ACCOUNT_REQUEST_REJECTED");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("type")
  private TypeEnum type = null;

  @SerializedName("timestamp")
  private OffsetDateTime timestamp = null;

  @SerializedName("accountKid")
  private String accountKid = null;

  @SerializedName("source")
  private String source = null;

  @SerializedName("objectClass")
  private String objectClass = null;

  @SerializedName("objectUuid")
  private String objectUuid = null;

  @SerializedName("new")
  private Boolean _new = null;

  public AuditRecord id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public AuditRecord type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public AuditRecord timestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Get timestamp
   * @return timestamp
  **/
  @Schema(description = "")
  public OffsetDateTime getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
  }

  public AuditRecord accountKid(String accountKid) {
    this.accountKid = accountKid;
    return this;
  }

   /**
   * Get accountKid
   * @return accountKid
  **/
  @Schema(description = "")
  public String getAccountKid() {
    return accountKid;
  }

  public void setAccountKid(String accountKid) {
    this.accountKid = accountKid;
  }

  public AuditRecord source(String source) {
    this.source = source;
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @Schema(description = "")
  public String getSource() {
    return source;
  }

  public void setSource(String source) {
    this.source = source;
  }

  public AuditRecord objectClass(String objectClass) {
    this.objectClass = objectClass;
    return this;
  }

   /**
   * Get objectClass
   * @return objectClass
  **/
  @Schema(description = "")
  public String getObjectClass() {
    return objectClass;
  }

  public void setObjectClass(String objectClass) {
    this.objectClass = objectClass;
  }

  public AuditRecord objectUuid(String objectUuid) {
    this.objectUuid = objectUuid;
    return this;
  }

   /**
   * Get objectUuid
   * @return objectUuid
  **/
  @Schema(description = "")
  public String getObjectUuid() {
    return objectUuid;
  }

  public void setObjectUuid(String objectUuid) {
    this.objectUuid = objectUuid;
  }

  public AuditRecord _new(Boolean _new) {
    this._new = _new;
    return this;
  }

   /**
   * Get _new
   * @return _new
  **/
  @Schema(description = "")
  public Boolean isNew() {
    return _new;
  }

  public void setNew(Boolean _new) {
    this._new = _new;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuditRecord auditRecord = (AuditRecord) o;
    return Objects.equals(this.id, auditRecord.id) &&
        Objects.equals(this.type, auditRecord.type) &&
        Objects.equals(this.timestamp, auditRecord.timestamp) &&
        Objects.equals(this.accountKid, auditRecord.accountKid) &&
        Objects.equals(this.source, auditRecord.source) &&
        Objects.equals(this.objectClass, auditRecord.objectClass) &&
        Objects.equals(this.objectUuid, auditRecord.objectUuid) &&
        Objects.equals(this._new, auditRecord._new);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, type, timestamp, accountKid, source, objectClass, objectUuid, _new);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuditRecord {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    accountKid: ").append(toIndentedString(accountKid)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    objectClass: ").append(toIndentedString(objectClass)).append("\n");
    sb.append("    objectUuid: ").append(toIndentedString(objectUuid)).append("\n");
    sb.append("    _new: ").append(toIndentedString(_new)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
