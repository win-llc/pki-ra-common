/*
 * OpenAPI definition
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.winllc.acme.common.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
/**
 * CertificateRequest
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-12-12T15:21:01.254Z[GMT]")
public class CertificateRequest {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("csr")
  private String csr = null;

  @SerializedName("submittedOn")
  private OffsetDateTime submittedOn = null;

  @SerializedName("reviewedOn")
  private OffsetDateTime reviewedOn = null;

  @SerializedName("certAuthorityName")
  private String certAuthorityName = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("issuedCertificate")
  private String issuedCertificate = null;

  @SerializedName("issuedCertificateSerial")
  private String issuedCertificateSerial = null;

  @SerializedName("publicKeyBase64")
  private String publicKeyBase64 = null;

  @SerializedName("requestedBy")
  private String requestedBy = null;

  @SerializedName("adminReviewer")
  private String adminReviewer = null;

  @SerializedName("requestedDnsNames")
  private List<String> requestedDnsNames = null;

  @SerializedName("account")
  private Account account = null;

  @SerializedName("serverEntry")
  private ServerEntry serverEntry = null;

  @SerializedName("new")
  private Boolean _new = null;

  public CertificateRequest id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public CertificateRequest csr(String csr) {
    this.csr = csr;
    return this;
  }

   /**
   * Get csr
   * @return csr
  **/
  @Schema(description = "")
  public String getCsr() {
    return csr;
  }

  public void setCsr(String csr) {
    this.csr = csr;
  }

  public CertificateRequest submittedOn(OffsetDateTime submittedOn) {
    this.submittedOn = submittedOn;
    return this;
  }

   /**
   * Get submittedOn
   * @return submittedOn
  **/
  @Schema(description = "")
  public OffsetDateTime getSubmittedOn() {
    return submittedOn;
  }

  public void setSubmittedOn(OffsetDateTime submittedOn) {
    this.submittedOn = submittedOn;
  }

  public CertificateRequest reviewedOn(OffsetDateTime reviewedOn) {
    this.reviewedOn = reviewedOn;
    return this;
  }

   /**
   * Get reviewedOn
   * @return reviewedOn
  **/
  @Schema(description = "")
  public OffsetDateTime getReviewedOn() {
    return reviewedOn;
  }

  public void setReviewedOn(OffsetDateTime reviewedOn) {
    this.reviewedOn = reviewedOn;
  }

  public CertificateRequest certAuthorityName(String certAuthorityName) {
    this.certAuthorityName = certAuthorityName;
    return this;
  }

   /**
   * Get certAuthorityName
   * @return certAuthorityName
  **/
  @Schema(description = "")
  public String getCertAuthorityName() {
    return certAuthorityName;
  }

  public void setCertAuthorityName(String certAuthorityName) {
    this.certAuthorityName = certAuthorityName;
  }

  public CertificateRequest status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public CertificateRequest issuedCertificate(String issuedCertificate) {
    this.issuedCertificate = issuedCertificate;
    return this;
  }

   /**
   * Get issuedCertificate
   * @return issuedCertificate
  **/
  @Schema(description = "")
  public String getIssuedCertificate() {
    return issuedCertificate;
  }

  public void setIssuedCertificate(String issuedCertificate) {
    this.issuedCertificate = issuedCertificate;
  }

  public CertificateRequest issuedCertificateSerial(String issuedCertificateSerial) {
    this.issuedCertificateSerial = issuedCertificateSerial;
    return this;
  }

   /**
   * Get issuedCertificateSerial
   * @return issuedCertificateSerial
  **/
  @Schema(description = "")
  public String getIssuedCertificateSerial() {
    return issuedCertificateSerial;
  }

  public void setIssuedCertificateSerial(String issuedCertificateSerial) {
    this.issuedCertificateSerial = issuedCertificateSerial;
  }

  public CertificateRequest publicKeyBase64(String publicKeyBase64) {
    this.publicKeyBase64 = publicKeyBase64;
    return this;
  }

   /**
   * Get publicKeyBase64
   * @return publicKeyBase64
  **/
  @Schema(description = "")
  public String getPublicKeyBase64() {
    return publicKeyBase64;
  }

  public void setPublicKeyBase64(String publicKeyBase64) {
    this.publicKeyBase64 = publicKeyBase64;
  }

  public CertificateRequest requestedBy(String requestedBy) {
    this.requestedBy = requestedBy;
    return this;
  }

   /**
   * Get requestedBy
   * @return requestedBy
  **/
  @Schema(description = "")
  public String getRequestedBy() {
    return requestedBy;
  }

  public void setRequestedBy(String requestedBy) {
    this.requestedBy = requestedBy;
  }

  public CertificateRequest adminReviewer(String adminReviewer) {
    this.adminReviewer = adminReviewer;
    return this;
  }

   /**
   * Get adminReviewer
   * @return adminReviewer
  **/
  @Schema(description = "")
  public String getAdminReviewer() {
    return adminReviewer;
  }

  public void setAdminReviewer(String adminReviewer) {
    this.adminReviewer = adminReviewer;
  }

  public CertificateRequest requestedDnsNames(List<String> requestedDnsNames) {
    this.requestedDnsNames = requestedDnsNames;
    return this;
  }

  public CertificateRequest addRequestedDnsNamesItem(String requestedDnsNamesItem) {
    if (this.requestedDnsNames == null) {
      this.requestedDnsNames = new ArrayList<String>();
    }
    this.requestedDnsNames.add(requestedDnsNamesItem);
    return this;
  }

   /**
   * Get requestedDnsNames
   * @return requestedDnsNames
  **/
  @Schema(description = "")
  public List<String> getRequestedDnsNames() {
    return requestedDnsNames;
  }

  public void setRequestedDnsNames(List<String> requestedDnsNames) {
    this.requestedDnsNames = requestedDnsNames;
  }

  public CertificateRequest account(Account account) {
    this.account = account;
    return this;
  }

   /**
   * Get account
   * @return account
  **/
  @Schema(description = "")
  public Account getAccount() {
    return account;
  }

  public void setAccount(Account account) {
    this.account = account;
  }

  public CertificateRequest serverEntry(ServerEntry serverEntry) {
    this.serverEntry = serverEntry;
    return this;
  }

   /**
   * Get serverEntry
   * @return serverEntry
  **/
  @Schema(description = "")
  public ServerEntry getServerEntry() {
    return serverEntry;
  }

  public void setServerEntry(ServerEntry serverEntry) {
    this.serverEntry = serverEntry;
  }

  public CertificateRequest _new(Boolean _new) {
    this._new = _new;
    return this;
  }

   /**
   * Get _new
   * @return _new
  **/
  @Schema(description = "")
  public Boolean isNew() {
    return _new;
  }

  public void setNew(Boolean _new) {
    this._new = _new;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CertificateRequest certificateRequest = (CertificateRequest) o;
    return Objects.equals(this.id, certificateRequest.id) &&
        Objects.equals(this.csr, certificateRequest.csr) &&
        Objects.equals(this.submittedOn, certificateRequest.submittedOn) &&
        Objects.equals(this.reviewedOn, certificateRequest.reviewedOn) &&
        Objects.equals(this.certAuthorityName, certificateRequest.certAuthorityName) &&
        Objects.equals(this.status, certificateRequest.status) &&
        Objects.equals(this.issuedCertificate, certificateRequest.issuedCertificate) &&
        Objects.equals(this.issuedCertificateSerial, certificateRequest.issuedCertificateSerial) &&
        Objects.equals(this.publicKeyBase64, certificateRequest.publicKeyBase64) &&
        Objects.equals(this.requestedBy, certificateRequest.requestedBy) &&
        Objects.equals(this.adminReviewer, certificateRequest.adminReviewer) &&
        Objects.equals(this.requestedDnsNames, certificateRequest.requestedDnsNames) &&
        Objects.equals(this.account, certificateRequest.account) &&
        Objects.equals(this.serverEntry, certificateRequest.serverEntry) &&
        Objects.equals(this._new, certificateRequest._new);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, csr, submittedOn, reviewedOn, certAuthorityName, status, issuedCertificate, issuedCertificateSerial, publicKeyBase64, requestedBy, adminReviewer, requestedDnsNames, account, serverEntry, _new);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CertificateRequest {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    csr: ").append(toIndentedString(csr)).append("\n");
    sb.append("    submittedOn: ").append(toIndentedString(submittedOn)).append("\n");
    sb.append("    reviewedOn: ").append(toIndentedString(reviewedOn)).append("\n");
    sb.append("    certAuthorityName: ").append(toIndentedString(certAuthorityName)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    issuedCertificate: ").append(toIndentedString(issuedCertificate)).append("\n");
    sb.append("    issuedCertificateSerial: ").append(toIndentedString(issuedCertificateSerial)).append("\n");
    sb.append("    publicKeyBase64: ").append(toIndentedString(publicKeyBase64)).append("\n");
    sb.append("    requestedBy: ").append(toIndentedString(requestedBy)).append("\n");
    sb.append("    adminReviewer: ").append(toIndentedString(adminReviewer)).append("\n");
    sb.append("    requestedDnsNames: ").append(toIndentedString(requestedDnsNames)).append("\n");
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    serverEntry: ").append(toIndentedString(serverEntry)).append("\n");
    sb.append("    _new: ").append(toIndentedString(_new)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
