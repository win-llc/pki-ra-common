/*
 * OpenAPI definition
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.winllc.acme.common.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.OffsetDateTime;
/**
 * Notification
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-12-12T15:21:01.254Z[GMT]")
public class Notification {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("forUserNames")
  private String forUserNames = null;

  @SerializedName("created")
  private OffsetDateTime created = null;

  @SerializedName("expiresOn")
  private OffsetDateTime expiresOn = null;

  @SerializedName("notificationRead")
  private Boolean notificationRead = null;

  @SerializedName("message")
  private String message = null;

  @SerializedName("new")
  private Boolean _new = null;

  public Notification id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public Notification forUserNames(String forUserNames) {
    this.forUserNames = forUserNames;
    return this;
  }

   /**
   * Get forUserNames
   * @return forUserNames
  **/
  @Schema(description = "")
  public String getForUserNames() {
    return forUserNames;
  }

  public void setForUserNames(String forUserNames) {
    this.forUserNames = forUserNames;
  }

  public Notification created(OffsetDateTime created) {
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @Schema(description = "")
  public OffsetDateTime getCreated() {
    return created;
  }

  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }

  public Notification expiresOn(OffsetDateTime expiresOn) {
    this.expiresOn = expiresOn;
    return this;
  }

   /**
   * Get expiresOn
   * @return expiresOn
  **/
  @Schema(description = "")
  public OffsetDateTime getExpiresOn() {
    return expiresOn;
  }

  public void setExpiresOn(OffsetDateTime expiresOn) {
    this.expiresOn = expiresOn;
  }

  public Notification notificationRead(Boolean notificationRead) {
    this.notificationRead = notificationRead;
    return this;
  }

   /**
   * Get notificationRead
   * @return notificationRead
  **/
  @Schema(description = "")
  public Boolean isNotificationRead() {
    return notificationRead;
  }

  public void setNotificationRead(Boolean notificationRead) {
    this.notificationRead = notificationRead;
  }

  public Notification message(String message) {
    this.message = message;
    return this;
  }

   /**
   * Get message
   * @return message
  **/
  @Schema(description = "")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  public Notification _new(Boolean _new) {
    this._new = _new;
    return this;
  }

   /**
   * Get _new
   * @return _new
  **/
  @Schema(description = "")
  public Boolean isNew() {
    return _new;
  }

  public void setNew(Boolean _new) {
    this._new = _new;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Notification notification = (Notification) o;
    return Objects.equals(this.id, notification.id) &&
        Objects.equals(this.forUserNames, notification.forUserNames) &&
        Objects.equals(this.created, notification.created) &&
        Objects.equals(this.expiresOn, notification.expiresOn) &&
        Objects.equals(this.notificationRead, notification.notificationRead) &&
        Objects.equals(this.message, notification.message) &&
        Objects.equals(this._new, notification._new);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, forUserNames, created, expiresOn, notificationRead, message, _new);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Notification {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    forUserNames: ").append(toIndentedString(forUserNames)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    expiresOn: ").append(toIndentedString(expiresOn)).append("\n");
    sb.append("    notificationRead: ").append(toIndentedString(notificationRead)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    _new: ").append(toIndentedString(_new)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
