/*
 * OpenAPI definition
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.winllc.acme.common.client.model;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
/**
 * AccountRestriction
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-12-12T15:21:01.254Z[GMT]")
public class AccountRestriction {
  @SerializedName("id")
  private Long id = null;

  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    REQUIRE_ACCREDITATION_BY("REQUIRE_ACCREDITATION_BY"),
    ACCOUNT_VALID_TO("ACCOUNT_VALID_TO"),
    CUSTOM("CUSTOM");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("type")
  private TypeEnum type = null;

  /**
   * Gets or Sets action
   */
  @JsonAdapter(ActionEnum.Adapter.class)
  public enum ActionEnum {
    ENABLE_ACCOUNT("ENABLE_ACCOUNT"),
    DISABLE_ACCOUNT("DISABLE_ACCOUNT");

    private String value;

    ActionEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ActionEnum fromValue(String text) {
      for (ActionEnum b : ActionEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ActionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ActionEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ActionEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return ActionEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("action")
  private ActionEnum action = null;

  @SerializedName("createdOn")
  private OffsetDateTime createdOn = null;

  @SerializedName("dueBy")
  private OffsetDateTime dueBy = null;

  @SerializedName("completed")
  private Boolean completed = null;

  @SerializedName("addedByUser")
  private String addedByUser = null;

  @SerializedName("markedCompletedByUser")
  private String markedCompletedByUser = null;

  @SerializedName("new")
  private Boolean _new = null;

  public AccountRestriction id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public AccountRestriction type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public AccountRestriction action(ActionEnum action) {
    this.action = action;
    return this;
  }

   /**
   * Get action
   * @return action
  **/
  @Schema(description = "")
  public ActionEnum getAction() {
    return action;
  }

  public void setAction(ActionEnum action) {
    this.action = action;
  }

  public AccountRestriction createdOn(OffsetDateTime createdOn) {
    this.createdOn = createdOn;
    return this;
  }

   /**
   * Get createdOn
   * @return createdOn
  **/
  @Schema(description = "")
  public OffsetDateTime getCreatedOn() {
    return createdOn;
  }

  public void setCreatedOn(OffsetDateTime createdOn) {
    this.createdOn = createdOn;
  }

  public AccountRestriction dueBy(OffsetDateTime dueBy) {
    this.dueBy = dueBy;
    return this;
  }

   /**
   * Get dueBy
   * @return dueBy
  **/
  @Schema(description = "")
  public OffsetDateTime getDueBy() {
    return dueBy;
  }

  public void setDueBy(OffsetDateTime dueBy) {
    this.dueBy = dueBy;
  }

  public AccountRestriction completed(Boolean completed) {
    this.completed = completed;
    return this;
  }

   /**
   * Get completed
   * @return completed
  **/
  @Schema(description = "")
  public Boolean isCompleted() {
    return completed;
  }

  public void setCompleted(Boolean completed) {
    this.completed = completed;
  }

  public AccountRestriction addedByUser(String addedByUser) {
    this.addedByUser = addedByUser;
    return this;
  }

   /**
   * Get addedByUser
   * @return addedByUser
  **/
  @Schema(description = "")
  public String getAddedByUser() {
    return addedByUser;
  }

  public void setAddedByUser(String addedByUser) {
    this.addedByUser = addedByUser;
  }

  public AccountRestriction markedCompletedByUser(String markedCompletedByUser) {
    this.markedCompletedByUser = markedCompletedByUser;
    return this;
  }

   /**
   * Get markedCompletedByUser
   * @return markedCompletedByUser
  **/
  @Schema(description = "")
  public String getMarkedCompletedByUser() {
    return markedCompletedByUser;
  }

  public void setMarkedCompletedByUser(String markedCompletedByUser) {
    this.markedCompletedByUser = markedCompletedByUser;
  }

  public AccountRestriction _new(Boolean _new) {
    this._new = _new;
    return this;
  }

   /**
   * Get _new
   * @return _new
  **/
  @Schema(description = "")
  public Boolean isNew() {
    return _new;
  }

  public void setNew(Boolean _new) {
    this._new = _new;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountRestriction accountRestriction = (AccountRestriction) o;
    return Objects.equals(this.id, accountRestriction.id) &&
        Objects.equals(this.type, accountRestriction.type) &&
        Objects.equals(this.action, accountRestriction.action) &&
        Objects.equals(this.createdOn, accountRestriction.createdOn) &&
        Objects.equals(this.dueBy, accountRestriction.dueBy) &&
        Objects.equals(this.completed, accountRestriction.completed) &&
        Objects.equals(this.addedByUser, accountRestriction.addedByUser) &&
        Objects.equals(this.markedCompletedByUser, accountRestriction.markedCompletedByUser) &&
        Objects.equals(this._new, accountRestriction._new);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, type, action, createdOn, dueBy, completed, addedByUser, markedCompletedByUser, _new);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountRestriction {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    createdOn: ").append(toIndentedString(createdOn)).append("\n");
    sb.append("    dueBy: ").append(toIndentedString(dueBy)).append("\n");
    sb.append("    completed: ").append(toIndentedString(completed)).append("\n");
    sb.append("    addedByUser: ").append(toIndentedString(addedByUser)).append("\n");
    sb.append("    markedCompletedByUser: ").append(toIndentedString(markedCompletedByUser)).append("\n");
    sb.append("    _new: ").append(toIndentedString(_new)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
