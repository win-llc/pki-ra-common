/*
 * OpenAPI definition
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.winllc.acme.common.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
/**
 * CertificateRequestForm
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-12-12T15:21:01.254Z[GMT]")
public class CertificateRequestForm {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("objectUuid")
  private String objectUuid = null;

  @SerializedName("objectClass")
  private String objectClass = null;

  @SerializedName("errors")
  private Map<String, String> errors = null;

  @SerializedName("csr")
  private String csr = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("certAuthorityName")
  private String certAuthorityName = null;

  @SerializedName("accountId")
  private Long accountId = null;

  @SerializedName("requestedDnsNames")
  private List<SubjectAltName> requestedDnsNames = null;

  @SerializedName("valid")
  private Boolean valid = null;

  @SerializedName("accountLinkedForm")
  private Boolean accountLinkedForm = null;

  @SerializedName("uniqueEntityForm")
  private Boolean uniqueEntityForm = null;

  public CertificateRequestForm id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public CertificateRequestForm objectUuid(String objectUuid) {
    this.objectUuid = objectUuid;
    return this;
  }

   /**
   * Get objectUuid
   * @return objectUuid
  **/
  @Schema(description = "")
  public String getObjectUuid() {
    return objectUuid;
  }

  public void setObjectUuid(String objectUuid) {
    this.objectUuid = objectUuid;
  }

  public CertificateRequestForm objectClass(String objectClass) {
    this.objectClass = objectClass;
    return this;
  }

   /**
   * Get objectClass
   * @return objectClass
  **/
  @Schema(description = "")
  public String getObjectClass() {
    return objectClass;
  }

  public void setObjectClass(String objectClass) {
    this.objectClass = objectClass;
  }

  public CertificateRequestForm errors(Map<String, String> errors) {
    this.errors = errors;
    return this;
  }

  public CertificateRequestForm putErrorsItem(String key, String errorsItem) {
    if (this.errors == null) {
      this.errors = new HashMap<String, String>();
    }
    this.errors.put(key, errorsItem);
    return this;
  }

   /**
   * Get errors
   * @return errors
  **/
  @Schema(description = "")
  public Map<String, String> getErrors() {
    return errors;
  }

  public void setErrors(Map<String, String> errors) {
    this.errors = errors;
  }

  public CertificateRequestForm csr(String csr) {
    this.csr = csr;
    return this;
  }

   /**
   * Get csr
   * @return csr
  **/
  @Schema(description = "")
  public String getCsr() {
    return csr;
  }

  public void setCsr(String csr) {
    this.csr = csr;
  }

  public CertificateRequestForm name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CertificateRequestForm certAuthorityName(String certAuthorityName) {
    this.certAuthorityName = certAuthorityName;
    return this;
  }

   /**
   * Get certAuthorityName
   * @return certAuthorityName
  **/
  @Schema(description = "")
  public String getCertAuthorityName() {
    return certAuthorityName;
  }

  public void setCertAuthorityName(String certAuthorityName) {
    this.certAuthorityName = certAuthorityName;
  }

  public CertificateRequestForm accountId(Long accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * Get accountId
   * @return accountId
  **/
  @Schema(required = true, description = "")
  public Long getAccountId() {
    return accountId;
  }

  public void setAccountId(Long accountId) {
    this.accountId = accountId;
  }

  public CertificateRequestForm requestedDnsNames(List<SubjectAltName> requestedDnsNames) {
    this.requestedDnsNames = requestedDnsNames;
    return this;
  }

  public CertificateRequestForm addRequestedDnsNamesItem(SubjectAltName requestedDnsNamesItem) {
    if (this.requestedDnsNames == null) {
      this.requestedDnsNames = new ArrayList<SubjectAltName>();
    }
    this.requestedDnsNames.add(requestedDnsNamesItem);
    return this;
  }

   /**
   * Get requestedDnsNames
   * @return requestedDnsNames
  **/
  @Schema(description = "")
  public List<SubjectAltName> getRequestedDnsNames() {
    return requestedDnsNames;
  }

  public void setRequestedDnsNames(List<SubjectAltName> requestedDnsNames) {
    this.requestedDnsNames = requestedDnsNames;
  }

  public CertificateRequestForm valid(Boolean valid) {
    this.valid = valid;
    return this;
  }

   /**
   * Get valid
   * @return valid
  **/
  @Schema(description = "")
  public Boolean isValid() {
    return valid;
  }

  public void setValid(Boolean valid) {
    this.valid = valid;
  }

  public CertificateRequestForm accountLinkedForm(Boolean accountLinkedForm) {
    this.accountLinkedForm = accountLinkedForm;
    return this;
  }

   /**
   * Get accountLinkedForm
   * @return accountLinkedForm
  **/
  @Schema(description = "")
  public Boolean isAccountLinkedForm() {
    return accountLinkedForm;
  }

  public void setAccountLinkedForm(Boolean accountLinkedForm) {
    this.accountLinkedForm = accountLinkedForm;
  }

  public CertificateRequestForm uniqueEntityForm(Boolean uniqueEntityForm) {
    this.uniqueEntityForm = uniqueEntityForm;
    return this;
  }

   /**
   * Get uniqueEntityForm
   * @return uniqueEntityForm
  **/
  @Schema(description = "")
  public Boolean isUniqueEntityForm() {
    return uniqueEntityForm;
  }

  public void setUniqueEntityForm(Boolean uniqueEntityForm) {
    this.uniqueEntityForm = uniqueEntityForm;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CertificateRequestForm certificateRequestForm = (CertificateRequestForm) o;
    return Objects.equals(this.id, certificateRequestForm.id) &&
        Objects.equals(this.objectUuid, certificateRequestForm.objectUuid) &&
        Objects.equals(this.objectClass, certificateRequestForm.objectClass) &&
        Objects.equals(this.errors, certificateRequestForm.errors) &&
        Objects.equals(this.csr, certificateRequestForm.csr) &&
        Objects.equals(this.name, certificateRequestForm.name) &&
        Objects.equals(this.certAuthorityName, certificateRequestForm.certAuthorityName) &&
        Objects.equals(this.accountId, certificateRequestForm.accountId) &&
        Objects.equals(this.requestedDnsNames, certificateRequestForm.requestedDnsNames) &&
        Objects.equals(this.valid, certificateRequestForm.valid) &&
        Objects.equals(this.accountLinkedForm, certificateRequestForm.accountLinkedForm) &&
        Objects.equals(this.uniqueEntityForm, certificateRequestForm.uniqueEntityForm);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, objectUuid, objectClass, errors, csr, name, certAuthorityName, accountId, requestedDnsNames, valid, accountLinkedForm, uniqueEntityForm);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CertificateRequestForm {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    objectUuid: ").append(toIndentedString(objectUuid)).append("\n");
    sb.append("    objectClass: ").append(toIndentedString(objectClass)).append("\n");
    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
    sb.append("    csr: ").append(toIndentedString(csr)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    certAuthorityName: ").append(toIndentedString(certAuthorityName)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    requestedDnsNames: ").append(toIndentedString(requestedDnsNames)).append("\n");
    sb.append("    valid: ").append(toIndentedString(valid)).append("\n");
    sb.append("    accountLinkedForm: ").append(toIndentedString(accountLinkedForm)).append("\n");
    sb.append("    uniqueEntityForm: ").append(toIndentedString(uniqueEntityForm)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
