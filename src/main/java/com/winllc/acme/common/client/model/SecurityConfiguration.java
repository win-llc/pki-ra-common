/*
 * OpenAPI definition
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.winllc.acme.common.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.HashMap;
import java.util.Map;
/**
 * SecurityConfiguration
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-12-12T15:21:01.254Z[GMT]")
public class SecurityConfiguration {
  @SerializedName("apiKey")
  private String apiKey = null;

  @SerializedName("apiKeyVehicle")
  private String apiKeyVehicle = null;

  @SerializedName("apiKeyName")
  private String apiKeyName = null;

  @SerializedName("clientId")
  private String clientId = null;

  @SerializedName("clientSecret")
  private String clientSecret = null;

  @SerializedName("realm")
  private String realm = null;

  @SerializedName("appName")
  private String appName = null;

  @SerializedName("scopeSeparator")
  private String scopeSeparator = null;

  @SerializedName("additionalQueryStringParams")
  private Map<String, Object> additionalQueryStringParams = null;

  @SerializedName("useBasicAuthenticationWithAccessCodeGrant")
  private Boolean useBasicAuthenticationWithAccessCodeGrant = null;

  @SerializedName("enableCsrfSupport")
  private Boolean enableCsrfSupport = null;

  public SecurityConfiguration apiKey(String apiKey) {
    this.apiKey = apiKey;
    return this;
  }

   /**
   * Get apiKey
   * @return apiKey
  **/
  @Schema(description = "")
  public String getApiKey() {
    return apiKey;
  }

  public void setApiKey(String apiKey) {
    this.apiKey = apiKey;
  }

  public SecurityConfiguration apiKeyVehicle(String apiKeyVehicle) {
    this.apiKeyVehicle = apiKeyVehicle;
    return this;
  }

   /**
   * Get apiKeyVehicle
   * @return apiKeyVehicle
  **/
  @Schema(description = "")
  public String getApiKeyVehicle() {
    return apiKeyVehicle;
  }

  public void setApiKeyVehicle(String apiKeyVehicle) {
    this.apiKeyVehicle = apiKeyVehicle;
  }

  public SecurityConfiguration apiKeyName(String apiKeyName) {
    this.apiKeyName = apiKeyName;
    return this;
  }

   /**
   * Get apiKeyName
   * @return apiKeyName
  **/
  @Schema(description = "")
  public String getApiKeyName() {
    return apiKeyName;
  }

  public void setApiKeyName(String apiKeyName) {
    this.apiKeyName = apiKeyName;
  }

  public SecurityConfiguration clientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

   /**
   * Get clientId
   * @return clientId
  **/
  @Schema(description = "")
  public String getClientId() {
    return clientId;
  }

  public void setClientId(String clientId) {
    this.clientId = clientId;
  }

  public SecurityConfiguration clientSecret(String clientSecret) {
    this.clientSecret = clientSecret;
    return this;
  }

   /**
   * Get clientSecret
   * @return clientSecret
  **/
  @Schema(description = "")
  public String getClientSecret() {
    return clientSecret;
  }

  public void setClientSecret(String clientSecret) {
    this.clientSecret = clientSecret;
  }

  public SecurityConfiguration realm(String realm) {
    this.realm = realm;
    return this;
  }

   /**
   * Get realm
   * @return realm
  **/
  @Schema(description = "")
  public String getRealm() {
    return realm;
  }

  public void setRealm(String realm) {
    this.realm = realm;
  }

  public SecurityConfiguration appName(String appName) {
    this.appName = appName;
    return this;
  }

   /**
   * Get appName
   * @return appName
  **/
  @Schema(description = "")
  public String getAppName() {
    return appName;
  }

  public void setAppName(String appName) {
    this.appName = appName;
  }

  public SecurityConfiguration scopeSeparator(String scopeSeparator) {
    this.scopeSeparator = scopeSeparator;
    return this;
  }

   /**
   * Get scopeSeparator
   * @return scopeSeparator
  **/
  @Schema(description = "")
  public String getScopeSeparator() {
    return scopeSeparator;
  }

  public void setScopeSeparator(String scopeSeparator) {
    this.scopeSeparator = scopeSeparator;
  }

  public SecurityConfiguration additionalQueryStringParams(Map<String, Object> additionalQueryStringParams) {
    this.additionalQueryStringParams = additionalQueryStringParams;
    return this;
  }

  public SecurityConfiguration putAdditionalQueryStringParamsItem(String key, Object additionalQueryStringParamsItem) {
    if (this.additionalQueryStringParams == null) {
      this.additionalQueryStringParams = new HashMap<String, Object>();
    }
    this.additionalQueryStringParams.put(key, additionalQueryStringParamsItem);
    return this;
  }

   /**
   * Get additionalQueryStringParams
   * @return additionalQueryStringParams
  **/
  @Schema(description = "")
  public Map<String, Object> getAdditionalQueryStringParams() {
    return additionalQueryStringParams;
  }

  public void setAdditionalQueryStringParams(Map<String, Object> additionalQueryStringParams) {
    this.additionalQueryStringParams = additionalQueryStringParams;
  }

  public SecurityConfiguration useBasicAuthenticationWithAccessCodeGrant(Boolean useBasicAuthenticationWithAccessCodeGrant) {
    this.useBasicAuthenticationWithAccessCodeGrant = useBasicAuthenticationWithAccessCodeGrant;
    return this;
  }

   /**
   * Get useBasicAuthenticationWithAccessCodeGrant
   * @return useBasicAuthenticationWithAccessCodeGrant
  **/
  @Schema(description = "")
  public Boolean isUseBasicAuthenticationWithAccessCodeGrant() {
    return useBasicAuthenticationWithAccessCodeGrant;
  }

  public void setUseBasicAuthenticationWithAccessCodeGrant(Boolean useBasicAuthenticationWithAccessCodeGrant) {
    this.useBasicAuthenticationWithAccessCodeGrant = useBasicAuthenticationWithAccessCodeGrant;
  }

  public SecurityConfiguration enableCsrfSupport(Boolean enableCsrfSupport) {
    this.enableCsrfSupport = enableCsrfSupport;
    return this;
  }

   /**
   * Get enableCsrfSupport
   * @return enableCsrfSupport
  **/
  @Schema(description = "")
  public Boolean isEnableCsrfSupport() {
    return enableCsrfSupport;
  }

  public void setEnableCsrfSupport(Boolean enableCsrfSupport) {
    this.enableCsrfSupport = enableCsrfSupport;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SecurityConfiguration securityConfiguration = (SecurityConfiguration) o;
    return Objects.equals(this.apiKey, securityConfiguration.apiKey) &&
        Objects.equals(this.apiKeyVehicle, securityConfiguration.apiKeyVehicle) &&
        Objects.equals(this.apiKeyName, securityConfiguration.apiKeyName) &&
        Objects.equals(this.clientId, securityConfiguration.clientId) &&
        Objects.equals(this.clientSecret, securityConfiguration.clientSecret) &&
        Objects.equals(this.realm, securityConfiguration.realm) &&
        Objects.equals(this.appName, securityConfiguration.appName) &&
        Objects.equals(this.scopeSeparator, securityConfiguration.scopeSeparator) &&
        Objects.equals(this.additionalQueryStringParams, securityConfiguration.additionalQueryStringParams) &&
        Objects.equals(this.useBasicAuthenticationWithAccessCodeGrant, securityConfiguration.useBasicAuthenticationWithAccessCodeGrant) &&
        Objects.equals(this.enableCsrfSupport, securityConfiguration.enableCsrfSupport);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apiKey, apiKeyVehicle, apiKeyName, clientId, clientSecret, realm, appName, scopeSeparator, additionalQueryStringParams, useBasicAuthenticationWithAccessCodeGrant, enableCsrfSupport);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SecurityConfiguration {\n");
    
    sb.append("    apiKey: ").append(toIndentedString(apiKey)).append("\n");
    sb.append("    apiKeyVehicle: ").append(toIndentedString(apiKeyVehicle)).append("\n");
    sb.append("    apiKeyName: ").append(toIndentedString(apiKeyName)).append("\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    clientSecret: ").append(toIndentedString(clientSecret)).append("\n");
    sb.append("    realm: ").append(toIndentedString(realm)).append("\n");
    sb.append("    appName: ").append(toIndentedString(appName)).append("\n");
    sb.append("    scopeSeparator: ").append(toIndentedString(scopeSeparator)).append("\n");
    sb.append("    additionalQueryStringParams: ").append(toIndentedString(additionalQueryStringParams)).append("\n");
    sb.append("    useBasicAuthenticationWithAccessCodeGrant: ").append(toIndentedString(useBasicAuthenticationWithAccessCodeGrant)).append("\n");
    sb.append("    enableCsrfSupport: ").append(toIndentedString(enableCsrfSupport)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
