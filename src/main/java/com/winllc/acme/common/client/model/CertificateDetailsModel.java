/*
 * OpenAPI definition
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.winllc.acme.common.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * CertificateDetails
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-12-12T15:21:01.254Z[GMT]")
public class CertificateDetailsModel {
  @SerializedName("serial")
  private String serial = null;

  @SerializedName("subject")
  private String subject = null;

  @SerializedName("issuer")
  private String issuer = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("certificateBase64")
  private String certificateBase64 = null;

  public CertificateDetailsModel serial(String serial) {
    this.serial = serial;
    return this;
  }

   /**
   * Get serial
   * @return serial
  **/
  @Schema(description = "")
  public String getSerial() {
    return serial;
  }

  public void setSerial(String serial) {
    this.serial = serial;
  }

  public CertificateDetailsModel subject(String subject) {
    this.subject = subject;
    return this;
  }

   /**
   * Get subject
   * @return subject
  **/
  @Schema(description = "")
  public String getSubject() {
    return subject;
  }

  public void setSubject(String subject) {
    this.subject = subject;
  }

  public CertificateDetailsModel issuer(String issuer) {
    this.issuer = issuer;
    return this;
  }

   /**
   * Get issuer
   * @return issuer
  **/
  @Schema(description = "")
  public String getIssuer() {
    return issuer;
  }

  public void setIssuer(String issuer) {
    this.issuer = issuer;
  }

  public CertificateDetailsModel status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public CertificateDetailsModel certificateBase64(String certificateBase64) {
    this.certificateBase64 = certificateBase64;
    return this;
  }

   /**
   * Get certificateBase64
   * @return certificateBase64
  **/
  @Schema(description = "")
  public String getCertificateBase64() {
    return certificateBase64;
  }

  public void setCertificateBase64(String certificateBase64) {
    this.certificateBase64 = certificateBase64;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CertificateDetailsModel certificateDetailsModel = (CertificateDetailsModel) o;
    return Objects.equals(this.serial, certificateDetailsModel.serial) &&
        Objects.equals(this.subject, certificateDetailsModel.subject) &&
        Objects.equals(this.issuer, certificateDetailsModel.issuer) &&
        Objects.equals(this.status, certificateDetailsModel.status) &&
        Objects.equals(this.certificateBase64, certificateDetailsModel.certificateBase64);
  }

  @Override
  public int hashCode() {
    return Objects.hash(serial, subject, issuer, status, certificateBase64);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CertificateDetails {\n");
    
    sb.append("    serial: ").append(toIndentedString(serial)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    issuer: ").append(toIndentedString(issuer)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    certificateBase64: ").append(toIndentedString(certificateBase64)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
