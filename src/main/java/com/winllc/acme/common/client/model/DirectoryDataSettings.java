/*
 * OpenAPI definition
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.winllc.acme.common.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
/**
 * DirectoryDataSettings
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-12-12T15:21:01.254Z[GMT]")
public class DirectoryDataSettings {
  @SerializedName("id")
  private String id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("allowPreAuthorization")
  private Boolean allowPreAuthorization = null;

  @SerializedName("mapsToCertificateAuthorityName")
  private String mapsToCertificateAuthorityName = null;

  @SerializedName("externalAccountProviderName")
  private String externalAccountProviderName = null;

  @SerializedName("termsOfServiceLastUpdatedOn")
  private OffsetDateTime termsOfServiceLastUpdatedOn = null;

  @SerializedName("termsOfServiceHistory")
  private List<String> termsOfServiceHistory = null;

  @SerializedName("metaTermsOfService")
  private String metaTermsOfService = null;

  @SerializedName("metaWebsite")
  private String metaWebsite = null;

  @SerializedName("metaCaaIdentities")
  private List<String> metaCaaIdentities = null;

  @SerializedName("metaExternalAccountRequired")
  private Boolean metaExternalAccountRequired = null;

  public DirectoryDataSettings id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public DirectoryDataSettings name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public DirectoryDataSettings allowPreAuthorization(Boolean allowPreAuthorization) {
    this.allowPreAuthorization = allowPreAuthorization;
    return this;
  }

   /**
   * Get allowPreAuthorization
   * @return allowPreAuthorization
  **/
  @Schema(description = "")
  public Boolean isAllowPreAuthorization() {
    return allowPreAuthorization;
  }

  public void setAllowPreAuthorization(Boolean allowPreAuthorization) {
    this.allowPreAuthorization = allowPreAuthorization;
  }

  public DirectoryDataSettings mapsToCertificateAuthorityName(String mapsToCertificateAuthorityName) {
    this.mapsToCertificateAuthorityName = mapsToCertificateAuthorityName;
    return this;
  }

   /**
   * Get mapsToCertificateAuthorityName
   * @return mapsToCertificateAuthorityName
  **/
  @Schema(description = "")
  public String getMapsToCertificateAuthorityName() {
    return mapsToCertificateAuthorityName;
  }

  public void setMapsToCertificateAuthorityName(String mapsToCertificateAuthorityName) {
    this.mapsToCertificateAuthorityName = mapsToCertificateAuthorityName;
  }

  public DirectoryDataSettings externalAccountProviderName(String externalAccountProviderName) {
    this.externalAccountProviderName = externalAccountProviderName;
    return this;
  }

   /**
   * Get externalAccountProviderName
   * @return externalAccountProviderName
  **/
  @Schema(description = "")
  public String getExternalAccountProviderName() {
    return externalAccountProviderName;
  }

  public void setExternalAccountProviderName(String externalAccountProviderName) {
    this.externalAccountProviderName = externalAccountProviderName;
  }

  public DirectoryDataSettings termsOfServiceLastUpdatedOn(OffsetDateTime termsOfServiceLastUpdatedOn) {
    this.termsOfServiceLastUpdatedOn = termsOfServiceLastUpdatedOn;
    return this;
  }

   /**
   * Get termsOfServiceLastUpdatedOn
   * @return termsOfServiceLastUpdatedOn
  **/
  @Schema(description = "")
  public OffsetDateTime getTermsOfServiceLastUpdatedOn() {
    return termsOfServiceLastUpdatedOn;
  }

  public void setTermsOfServiceLastUpdatedOn(OffsetDateTime termsOfServiceLastUpdatedOn) {
    this.termsOfServiceLastUpdatedOn = termsOfServiceLastUpdatedOn;
  }

  public DirectoryDataSettings termsOfServiceHistory(List<String> termsOfServiceHistory) {
    this.termsOfServiceHistory = termsOfServiceHistory;
    return this;
  }

  public DirectoryDataSettings addTermsOfServiceHistoryItem(String termsOfServiceHistoryItem) {
    if (this.termsOfServiceHistory == null) {
      this.termsOfServiceHistory = new ArrayList<String>();
    }
    this.termsOfServiceHistory.add(termsOfServiceHistoryItem);
    return this;
  }

   /**
   * Get termsOfServiceHistory
   * @return termsOfServiceHistory
  **/
  @Schema(description = "")
  public List<String> getTermsOfServiceHistory() {
    return termsOfServiceHistory;
  }

  public void setTermsOfServiceHistory(List<String> termsOfServiceHistory) {
    this.termsOfServiceHistory = termsOfServiceHistory;
  }

  public DirectoryDataSettings metaTermsOfService(String metaTermsOfService) {
    this.metaTermsOfService = metaTermsOfService;
    return this;
  }

   /**
   * Get metaTermsOfService
   * @return metaTermsOfService
  **/
  @Schema(description = "")
  public String getMetaTermsOfService() {
    return metaTermsOfService;
  }

  public void setMetaTermsOfService(String metaTermsOfService) {
    this.metaTermsOfService = metaTermsOfService;
  }

  public DirectoryDataSettings metaWebsite(String metaWebsite) {
    this.metaWebsite = metaWebsite;
    return this;
  }

   /**
   * Get metaWebsite
   * @return metaWebsite
  **/
  @Schema(description = "")
  public String getMetaWebsite() {
    return metaWebsite;
  }

  public void setMetaWebsite(String metaWebsite) {
    this.metaWebsite = metaWebsite;
  }

  public DirectoryDataSettings metaCaaIdentities(List<String> metaCaaIdentities) {
    this.metaCaaIdentities = metaCaaIdentities;
    return this;
  }

  public DirectoryDataSettings addMetaCaaIdentitiesItem(String metaCaaIdentitiesItem) {
    if (this.metaCaaIdentities == null) {
      this.metaCaaIdentities = new ArrayList<String>();
    }
    this.metaCaaIdentities.add(metaCaaIdentitiesItem);
    return this;
  }

   /**
   * Get metaCaaIdentities
   * @return metaCaaIdentities
  **/
  @Schema(description = "")
  public List<String> getMetaCaaIdentities() {
    return metaCaaIdentities;
  }

  public void setMetaCaaIdentities(List<String> metaCaaIdentities) {
    this.metaCaaIdentities = metaCaaIdentities;
  }

  public DirectoryDataSettings metaExternalAccountRequired(Boolean metaExternalAccountRequired) {
    this.metaExternalAccountRequired = metaExternalAccountRequired;
    return this;
  }

   /**
   * Get metaExternalAccountRequired
   * @return metaExternalAccountRequired
  **/
  @Schema(description = "")
  public Boolean isMetaExternalAccountRequired() {
    return metaExternalAccountRequired;
  }

  public void setMetaExternalAccountRequired(Boolean metaExternalAccountRequired) {
    this.metaExternalAccountRequired = metaExternalAccountRequired;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DirectoryDataSettings directoryDataSettings = (DirectoryDataSettings) o;
    return Objects.equals(this.id, directoryDataSettings.id) &&
        Objects.equals(this.name, directoryDataSettings.name) &&
        Objects.equals(this.allowPreAuthorization, directoryDataSettings.allowPreAuthorization) &&
        Objects.equals(this.mapsToCertificateAuthorityName, directoryDataSettings.mapsToCertificateAuthorityName) &&
        Objects.equals(this.externalAccountProviderName, directoryDataSettings.externalAccountProviderName) &&
        Objects.equals(this.termsOfServiceLastUpdatedOn, directoryDataSettings.termsOfServiceLastUpdatedOn) &&
        Objects.equals(this.termsOfServiceHistory, directoryDataSettings.termsOfServiceHistory) &&
        Objects.equals(this.metaTermsOfService, directoryDataSettings.metaTermsOfService) &&
        Objects.equals(this.metaWebsite, directoryDataSettings.metaWebsite) &&
        Objects.equals(this.metaCaaIdentities, directoryDataSettings.metaCaaIdentities) &&
        Objects.equals(this.metaExternalAccountRequired, directoryDataSettings.metaExternalAccountRequired);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, allowPreAuthorization, mapsToCertificateAuthorityName, externalAccountProviderName, termsOfServiceLastUpdatedOn, termsOfServiceHistory, metaTermsOfService, metaWebsite, metaCaaIdentities, metaExternalAccountRequired);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DirectoryDataSettings {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    allowPreAuthorization: ").append(toIndentedString(allowPreAuthorization)).append("\n");
    sb.append("    mapsToCertificateAuthorityName: ").append(toIndentedString(mapsToCertificateAuthorityName)).append("\n");
    sb.append("    externalAccountProviderName: ").append(toIndentedString(externalAccountProviderName)).append("\n");
    sb.append("    termsOfServiceLastUpdatedOn: ").append(toIndentedString(termsOfServiceLastUpdatedOn)).append("\n");
    sb.append("    termsOfServiceHistory: ").append(toIndentedString(termsOfServiceHistory)).append("\n");
    sb.append("    metaTermsOfService: ").append(toIndentedString(metaTermsOfService)).append("\n");
    sb.append("    metaWebsite: ").append(toIndentedString(metaWebsite)).append("\n");
    sb.append("    metaCaaIdentities: ").append(toIndentedString(metaCaaIdentities)).append("\n");
    sb.append("    metaExternalAccountRequired: ").append(toIndentedString(metaExternalAccountRequired)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
