/*
 * OpenAPI definition
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.winllc.acme.common.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.OffsetDateTime;
/**
 * TermsOfService
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-12-12T15:21:01.254Z[GMT]")
public class TermsOfService {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("versionId")
  private String versionId = null;

  @SerializedName("text")
  private String text = null;

  @SerializedName("created")
  private OffsetDateTime created = null;

  @SerializedName("forDirectoryName")
  private String forDirectoryName = null;

  @SerializedName("new")
  private Boolean _new = null;

  public TermsOfService id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public TermsOfService versionId(String versionId) {
    this.versionId = versionId;
    return this;
  }

   /**
   * Get versionId
   * @return versionId
  **/
  @Schema(description = "")
  public String getVersionId() {
    return versionId;
  }

  public void setVersionId(String versionId) {
    this.versionId = versionId;
  }

  public TermsOfService text(String text) {
    this.text = text;
    return this;
  }

   /**
   * Get text
   * @return text
  **/
  @Schema(description = "")
  public String getText() {
    return text;
  }

  public void setText(String text) {
    this.text = text;
  }

  public TermsOfService created(OffsetDateTime created) {
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @Schema(description = "")
  public OffsetDateTime getCreated() {
    return created;
  }

  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }

  public TermsOfService forDirectoryName(String forDirectoryName) {
    this.forDirectoryName = forDirectoryName;
    return this;
  }

   /**
   * Get forDirectoryName
   * @return forDirectoryName
  **/
  @Schema(description = "")
  public String getForDirectoryName() {
    return forDirectoryName;
  }

  public void setForDirectoryName(String forDirectoryName) {
    this.forDirectoryName = forDirectoryName;
  }

  public TermsOfService _new(Boolean _new) {
    this._new = _new;
    return this;
  }

   /**
   * Get _new
   * @return _new
  **/
  @Schema(description = "")
  public Boolean isNew() {
    return _new;
  }

  public void setNew(Boolean _new) {
    this._new = _new;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TermsOfService termsOfService = (TermsOfService) o;
    return Objects.equals(this.id, termsOfService.id) &&
        Objects.equals(this.versionId, termsOfService.versionId) &&
        Objects.equals(this.text, termsOfService.text) &&
        Objects.equals(this.created, termsOfService.created) &&
        Objects.equals(this.forDirectoryName, termsOfService.forDirectoryName) &&
        Objects.equals(this._new, termsOfService._new);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, versionId, text, created, forDirectoryName, _new);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TermsOfService {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    versionId: ").append(toIndentedString(versionId)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    forDirectoryName: ").append(toIndentedString(forDirectoryName)).append("\n");
    sb.append("    _new: ").append(toIndentedString(_new)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
